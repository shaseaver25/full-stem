import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { useAiFeedback } from "@/hooks/useAiFeedback";
import { Loader2, Sparkles, RefreshCw, Lightbulb } from "lucide-react";

interface StudentData {
  first_name: string;
  last_name: string;
  classes: ClassData[];
}

interface ClassData {
  title: string;
  submissions: SubmissionData[];
}

interface SubmissionData {
  assignment_title: string;
  grade: number;
  feedback: string;
}

interface ParentAiInsightsProps {
  studentData: StudentData;
  preferredLanguage: string;
}

const ParentAiInsights = ({ studentData, preferredLanguage }: ParentAiInsightsProps) => {
  const { generateSummary } = useAiFeedback();
  const [loading, setLoading] = useState(false);
  const [insights, setInsights] = useState<string | null>(null);

  const handleGenerateInsights = async () => {
    setLoading(true);
    try {
      // Prepare all submissions for AI analysis
      const allSubmissions = studentData.classes.flatMap(classItem =>
        classItem.submissions.map(submission => ({
          assignment_title: `${classItem.title}: ${submission.assignment_title}`,
          grade: submission.grade,
          feedback: submission.feedback,
        }))
      );

      if (allSubmissions.length === 0) {
        setInsights("No submission data available yet to generate insights.");
        return;
      }

      const result = await generateSummary(allSubmissions);
      setInsights(result);
    } catch (error) {
      console.error("Error generating insights:", error);
    } finally {
      setLoading(false);
    }
  };

  // Calculate strengths and areas for improvement
  const allSubmissions = studentData.classes.flatMap(c => c.submissions);
  const averageGrade = allSubmissions.length > 0
    ? allSubmissions.reduce((sum, s) => sum + s.grade, 0) / allSubmissions.length
    : 0;

  const strongClasses = studentData.classes
    .filter(c => {
      const avg = c.submissions.length > 0
        ? c.submissions.reduce((sum, s) => sum + s.grade, 0) / c.submissions.length
        : 0;
      return avg >= 85;
    })
    .map(c => c.title);

  const needsAttentionClasses = studentData.classes
    .filter(c => {
      const avg = c.submissions.length > 0
        ? c.submissions.reduce((sum, s) => sum + s.grade, 0) / c.submissions.length
        : 0;
      return avg < 75;
    })
    .map(c => c.title);

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Sparkles className="h-5 w-5 text-primary" />
            AI-Powered Progress Insights
          </CardTitle>
          <CardDescription>
            Get personalized insights about {studentData.first_name}'s learning journey
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex gap-2">
            <Button
              onClick={handleGenerateInsights}
              disabled={loading || allSubmissions.length === 0}
              className="gap-2"
            >
              {loading ? (
                <>
                  <Loader2 className="h-4 w-4 animate-spin" />
                  Analyzing Progress...
                </>
              ) : (
                <>
                  <Sparkles className="h-4 w-4" />
                  Generate AI Insights
                </>
              )}
            </Button>

            {insights && (
              <Button
                variant="outline"
                onClick={handleGenerateInsights}
                disabled={loading}
                className="gap-2"
              >
                <RefreshCw className="h-4 w-4" />
                Refresh
              </Button>
            )}
          </div>

          {insights && (
            <Alert className="bg-primary/5 border-primary/20">
              <Sparkles className="h-4 w-4 text-primary" />
              <AlertDescription className="mt-2 whitespace-pre-wrap">
                {insights}
              </AlertDescription>
              <p className="text-xs text-muted-foreground mt-4">
                Generated by TailorEDU AI Assistant • Translated to your preferred language
              </p>
            </Alert>
          )}

          {!insights && !loading && (
            <Alert>
              <AlertDescription>
                Click "Generate AI Insights" to receive personalized analysis of {studentData.first_name}'s
                performance, including strengths, areas for improvement, and specific recommendations
                for supporting learning at home.
              </AlertDescription>
            </Alert>
          )}
        </CardContent>
      </Card>

      {/* Quick Insights */}
      <div className="grid gap-4 md:grid-cols-2">
        {strongClasses.length > 0 && (
          <Card className="border-green-200 bg-green-50/50">
            <CardHeader>
              <CardTitle className="text-lg flex items-center gap-2">
                <Sparkles className="h-5 w-5 text-green-600" />
                Areas of Strength
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-sm text-muted-foreground mb-3">
                {studentData.first_name} is excelling in:
              </p>
              <div className="space-y-2">
                {strongClasses.map((className) => (
                  <div
                    key={className}
                    className="flex items-center gap-2 p-2 rounded-md bg-background"
                  >
                    <div className="h-2 w-2 rounded-full bg-green-500" />
                    <span className="text-sm font-medium">{className}</span>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        )}

        {needsAttentionClasses.length > 0 && (
          <Card className="border-yellow-200 bg-yellow-50/50">
            <CardHeader>
              <CardTitle className="text-lg flex items-center gap-2">
                <Lightbulb className="h-5 w-5 text-yellow-600" />
                Growth Opportunities
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-sm text-muted-foreground mb-3">
                Additional support may help in:
              </p>
              <div className="space-y-2">
                {needsAttentionClasses.map((className) => (
                  <div
                    key={className}
                    className="flex items-center gap-2 p-2 rounded-md bg-background"
                  >
                    <div className="h-2 w-2 rounded-full bg-yellow-500" />
                    <span className="text-sm font-medium">{className}</span>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        )}
      </div>

      {/* Support Suggestions */}
      <Card>
        <CardHeader>
          <CardTitle>At-Home Support Suggestions</CardTitle>
        </CardHeader>
        <CardContent>
          <ul className="space-y-2 text-sm">
            <li className="flex items-start gap-2">
              <span className="text-primary">•</span>
              <span>
                Review assignments together and discuss what was learned
              </span>
            </li>
            <li className="flex items-start gap-2">
              <span className="text-primary">•</span>
              <span>
                Encourage {studentData.first_name} to ask questions when concepts are unclear
              </span>
            </li>
            <li className="flex items-start gap-2">
              <span className="text-primary">•</span>
              <span>
                Celebrate successes and maintain a positive attitude toward learning
              </span>
            </li>
            <li className="flex items-start gap-2">
              <span className="text-primary">•</span>
              <span>
                Reach out to teachers if you notice persistent challenges
              </span>
            </li>
            <li className="flex items-start gap-2">
              <span className="text-primary">•</span>
              <span>
                Create a consistent study routine and quiet workspace
              </span>
            </li>
          </ul>
        </CardContent>
      </Card>
    </div>
  );
};

export default ParentAiInsights;
